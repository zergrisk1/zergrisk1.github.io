{"version":3,"file":"component---src-pages-search-jsx-1818a8275f004795a7d7.js","mappings":"wPAcA,MAAMA,EAAgBC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,eAAVJ,CAAU,+DA4ChC,UArCeK,IAAe,IAAd,KAAEC,GAAMD,EACtB,MAAME,EAAQD,EAAKE,kBAAkBC,OAE/B,EAACC,EAAM,EAACC,IAAYC,EAAAA,EAAAA,UAAS,IAE7BC,GAAgBC,EAAAA,EAAAA,aACpBP,EAAMQ,QAAOC,IACX,MAAM,YAAEC,EAAW,gBAAEC,GAAoBF,GACnC,MAAEG,GAAUF,EACZG,EAAaV,EAAMW,oBAEzB,QAAIH,EAAgBG,oBAAoBC,SAASF,IAE1CD,EAAME,oBAAoBC,SAASF,EAAW,IAEvD,CAACV,IAGH,OACEa,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CAACN,MAAOA,EAAAA,MAAOO,YAAaA,EAAAA,YAAaC,IAAKC,EAAAA,UAClDL,EAAAA,cAACM,EAAAA,EAAa,CAACC,KAAM,KACrBP,EAAAA,cAACxB,EAAa,KACZwB,EAAAA,cAACQ,EAAAA,EAAK,CAACC,aAAcnB,EAAcoB,OAAQC,MAAM,UAAUC,IAAK,GAAIC,UAAU,EACvEC,GAAI,CAACC,IAAI,MAAOC,KAAM,SAE7BhB,EAAAA,cAACiB,EAAAA,EAAS,CACRC,SAAUC,GAAK/B,EAAS+B,EAAEC,OAAOC,OACjCC,YAAY,YAGhBtB,EAAAA,cAACuB,EAAAA,EAAO,MACRvB,EAAAA,cAACwB,EAAAA,EAAQ,CAACC,SAAUnC,IACb,C","sources":["webpack://gatsby-starter-rundevelrun/./src/pages/search.jsx"],"sourcesContent":["import React, { useState, useCallback } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport SEO from \"components/SEO\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"components/Layout\"\r\nimport PostList from \"components/PostList\"\r\nimport TextField from \"components/TextField\"\r\nimport Badge from '@mui/material/Badge';\r\nimport VerticalSpace from \"components/VerticalSpace\"\r\n\r\nimport { title, description, siteUrl } from \"../../blog-config\"\r\nimport Divider from \"../components/Divider\"\r\n\r\nconst SearchWrapper = styled.div`\r\n    margin-top: 20px;\r\n    @media (max-width: 768px) {\r\n        padding: 0 15px;\r\n    }\r\n`\r\n\r\nconst Search = ({ data }) => {\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n  const [query, setQuery] = useState(\"\")\r\n\r\n  const filteredPosts = useCallback(\r\n    posts.filter(post => {\r\n      const { frontmatter, rawMarkdownBody } = post\r\n      const { title } = frontmatter\r\n      const lowerQuery = query.toLocaleLowerCase()\r\n\r\n      if (rawMarkdownBody.toLocaleLowerCase().includes(lowerQuery)) return true\r\n\r\n      return title.toLocaleLowerCase().includes(lowerQuery)\r\n    }),\r\n    [query]\r\n  )\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={title} description={description} url={siteUrl} />\r\n      <VerticalSpace size={10} />\r\n      <SearchWrapper>\r\n        <Badge badgeContent={filteredPosts.length} color=\"warning\" max={99} showZero={true}\r\n               sx={{top:'5px', left: '2px'}}>\r\n        </Badge>\r\n        <TextField\r\n          onChange={e => setQuery(e.target.value)}\r\n          placeholder=\"Search\"\r\n        />\r\n      </SearchWrapper>\r\n      <Divider />\r\n      <PostList postList={filteredPosts} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Search\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { fileAbsolutePath: { regex: \"/contents/posts/\" } }\r\n    ) {\r\n      nodes {\r\n        excerpt(pruneLength: 200, truncate: true)\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          tags\r\n          emoji\r\n          series\r\n        }\r\n        rawMarkdownBody\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["SearchWrapper","styled","div","withConfig","displayName","componentId","_ref","data","posts","allMarkdownRemark","nodes","query","setQuery","useState","filteredPosts","useCallback","filter","post","frontmatter","rawMarkdownBody","title","lowerQuery","toLocaleLowerCase","includes","React","Layout","SEO","description","url","siteUrl","VerticalSpace","size","Badge","badgeContent","length","color","max","showZero","sx","top","left","TextField","onChange","e","target","value","placeholder","Divider","PostList","postList"],"sourceRoot":""}